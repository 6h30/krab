import React, { useState } from 'react';
import { View, Text, TextInput, FlatList, Image, TouchableOpacity, StyleSheet } from 'react-native';
import Icon from 'react-native-vector-icons/MaterialIcons';
// import styles from './styles'; 

// ƒê·ªãnh nghƒ©a ki·ªÉu d·ªØ li·ªáu cho g·ª£i √Ω ƒë·ªãa ƒëi·ªÉm
interface Suggestion {
  id: string;
  name: string;
  address: string;
}

// ƒê·ªãnh nghƒ©a ki·ªÉu d·ªØ li·ªáu cho ∆∞u ƒë√£i
interface Offer {
  id: string;
  title: string;
  discount: string;
  image: any;
}

// ƒê·ªãnh nghƒ©a ki·ªÉu d·ªØ li·ªáu cho c√°c t√πy ch·ªçn chuy·∫øn ƒëi
interface RideOption {
  id: string;
  title: string;
  description: string;
  icon: any;
}

// ƒê·ªãnh nghƒ©a ki·ªÉu d·ªØ li·ªáu cho kh√°m ph√° th√™m
interface ExploreItem {
  id: string;
  image: any;
}

const RideBookingScreen = () => {
  const [destination, setDestination] = useState('');

  // D·ªØ li·ªáu gi·∫£ l·∫≠p cho danh s√°ch g·ª£i √Ω ƒë·ªãa ƒëi·ªÉm
  const suggestions: Suggestion[] = [
    { id: '1', name: 'Mitek Tr·ª• S·ªü Ch√≠nh', address: 'SƒÉng T·∫°o, PT T√¢n Thu·∫≠n ƒê√¥ng, Q7, TP H·ªì Ch√≠ Minh' },
    { id: '2', name: 'Ch√†nh Xe Anh Vinh', address: 'V√µ VƒÉn Ki·ªát, P7, Q6, TP H·ªì Ch√≠ Minh, 70000, Vietnam' },
    { id: '3', name: 'Nh√†', address: '3/7 T√¢n M·ªπ, 3/7 T√¢n M·ªπ, P T√¢n Thu·∫≠n T√¢y, Q7, TP H·ªì Ch√≠ Minh' },
    { id: '4', name: 'C√¥ng vi√™n', address: 'ƒê∆∞·ªùng L√™ L·ª£i, Q1, TP H·ªì Ch√≠ Minh' },
    { id: '5', name: 'Tr∆∞·ªùng h·ªçc', address: 'ƒê∆∞·ªùng Nguy·ªÖn Hu·ªá, Q1, TP H·ªì Ch√≠ Minh' },
  ];

  // D·ªØ li·ªáu gi·∫£ l·∫≠p cho danh s√°ch ∆∞u ƒë√£i
  const offers: Offer[] = [
    { id: '1', title: 'Baozi', discount: 'Gi·∫£m 20%', image: require('@/assets/images/krab-go.png') },
    { id: '2', title: 'District K', discount: 'Gi·∫£m 15%', image: require('@/assets/images/krab-go.png') },
    { id: '3', title: 'The Sake', discount: 'Gi·∫£m 20%', image: require('@/assets/images/krab-go.png') },
    { id: '4', title: 'Baozi', discount: 'Gi·∫£m 20%', image: require('@/assets/images/krab-go.png') },
  ];

  // D·ªØ li·ªáu gi·∫£ l·∫≠p cho c√°c t√πy ch·ªçn chuy·∫øn ƒëi
  const rideOptions: RideOption[] = [
    { id: '1', title: 'ƒê·∫∑t tr∆∞·ªõc chuy·∫øn xe', description: '', icon: require('@/assets/images/krab-go.png') },
    { id: '2', title: 'ƒê·∫∑t xe cho Gia ƒê√¨nh', description: '', icon: require('@/assets/images/krab-go.png') },
    { id: '3', title: 'Xe r·ªìng hi·ªán ƒë·∫°i', description: '', icon: require('@/assets/images/krab-go.png') },
    { id: '4', title: 'ƒêi chuy·∫øn nh√¥m tho√°i', description: '', icon: require('@/assets/images/krab-go.png') },
  ];

  // D·ªØ li·ªáu gi·∫£ l·∫≠p cho Advance Booking
  const advanceBooking = {
    id: '1',
    title: 'Advance Booking',
    description: 'L√™n l·ªãch ƒë·∫∑t xe, Kh√¥ng lo tr·ªÖ gi·ªù\nT√†i x·∫ø s·∫Ω ƒë·∫øn ƒë√∫ng gi·ªù, h·ªó tr·ª£ ƒë√≥n b·∫°n',
    image: require('@/assets/images/krab-go.png'),
  };

  // D·ªØ li·ªáu gi·∫£ l·∫≠p cho kh√°m ph√° th√™m
  const exploreItems: ExploreItem[] = [
    { id: '1', image: require('@/assets/images/krab-go.png') },
    { id: '2', image: require('@/assets/images/krab-go.png') },
  ];

  // H√†m render cho g·ª£i √Ω ƒë·ªãa ƒëi·ªÉm
  const renderSuggestionItem = ({ item }: { item: Suggestion }) => (
    <View style={styles.suggestionItem}>
      <Icon name="location-pin" size={24} color="#FF0000" />
      <View style={styles.suggestionText}>
        <Text style={styles.suggestionName}>{item.name}</Text>
        <Text style={styles.suggestionAddress}>{item.address}</Text>
      </View>
    </View>
  );

  // H√†m render cho ∆∞u ƒë√£i
  const renderOfferItem = ({ item }: { item: Offer }) => (
    <View style={styles.offerItem}>
      <Image source={item.image} style={styles.offerImage} />
      <Text style={styles.offerTitle}>{item.title}</Text>
      <Text style={styles.offerDiscount}>{item.discount}</Text>
    </View>
  );

  // H√†m render cho c√°c t√πy ch·ªçn chuy·∫øn ƒëi
  const renderRideOptionItem = ({ item }: { item: RideOption }) => (
    <TouchableOpacity style={styles.rideOptionItem}>
      <Image source={item.icon} style={styles.rideOptionIcon} />
      <View style={styles.rideOptionText}>
        <Text style={styles.rideOptionTitle}>{item.title}</Text>
        <Text style={styles.rideOptionDescription}>{item.description}</Text>
      </View>
    </TouchableOpacity>
  );

  // H√†m render cho Advance Booking
  const renderAdvanceBooking = () => (
    <View style={styles.advanceBookingContainer}>
      <Image source={advanceBooking.image} style={styles.advanceBookingImage} />
      <View style={styles.advanceBookingText}>
        <Text style={styles.advanceBookingTitle}>{advanceBooking.title}</Text>
        <Text style={styles.advanceBookingDescription}>{advanceBooking.description}</Text>
      </View>
      <View style={styles.advanceBookingSubText}>
        <Text style={styles.subText}>Nhanh tay l√™n l·ªãch Tho·∫£i m√°i h∆°n khi</Text>
      </View>
    </View>
  );

  // H√†m render cho kh√°m ph√° th√™m
  const renderExploreItem = ({ item }: { item: ExploreItem }) => (
    <Image source={item.image} style={styles.exploreImage} />
  );

  // Header c·ªßa FlatList (bao g·ªìm header, illustration, search bar, t√πy ch·ªçn chuy·∫øn ƒëi, advance booking)
  const renderHeader = () => (
    <>
      {/* Header */}
      <View style={styles.header}>
        <TouchableOpacity>
          <Icon name="arrow-back" size={24} color="#000" />
        </TouchableOpacity>
        <Text style={styles.headerTitle}>Move</Text>
        <TouchableOpacity>
          <Icon name="map" size={24} color="#000" />
        </TouchableOpacity>
      </View>

      {/* Illustration */}
      <View style={styles.illustrationContainer}>
        <Text style={styles.subHeader}>Ch·ª©ng t·ªè s·ª± ƒë·ªânh cao ƒë·∫ßy b·∫•t ng·ªù!</Text>
        <Image
          source={require('@/assets/images/krab-go.png')}
          style={styles.illustration}
        />
      </View>

      {renderSuggestionItem}

      {/* Sticky Search Bar */}
      <View style={styles.searchContainer}>
        <Icon name="location-on" size={24} color="#FF0000" />
        <TextInput
          style={styles.searchInput}
          placeholder="B·∫°n mu·ªën ƒë·∫øn ƒë√¢u?"
          value={destination}
          onChangeText={setDestination}
        />
        <TouchableOpacity style={styles.bookButton}>
          <Text style={styles.bookButtonText}>ƒê·∫∑t ngay</Text>
        </TouchableOpacity>
        
      </View>

      {/* Ti√™u ƒë·ªÅ v√† t√πy ch·ªçn chuy·∫øn ƒëi */}
      <View style={styles.optionsSection}>
        <Text style={styles.sectionTitle}>ƒêa d·∫°ng l·ª±a ch·ªçn ƒëi chuy·∫øn cho b·∫°n</Text>
        <FlatList
          data={rideOptions}
          renderItem={renderRideOptionItem}
          keyExtractor={(item) => item.id}
          horizontal
          showsHorizontalScrollIndicator={false}
          style={styles.rideOptionsList}
        />
      </View>

      {/* Advance Booking */}
      <Text style={[styles.sectionTitle, { paddingHorizontal: 16 }]}>ƒê·∫∑t tr∆∞·ªõc chuy·∫øn xe v·ªõi b√†n</Text>
      {renderAdvanceBooking()}
    </>
  );

  
  const renderFooter = () => (
    <View>
      {/* Ph·∫ßn ∆∞u ƒë√£i */}
      <View style={styles.hotDealContainer}>
        <Text style={styles.hotDealTitle}>ƒêi·ªÉm Hot N·∫øn-di - Grab üéâ</Text>
        <FlatList
          data={offers}
          renderItem={renderOfferItem}
          keyExtractor={(item) => item.id}
          horizontal
          showsHorizontalScrollIndicator={false}
          style={styles.offersList}
        />
      </View>

      {/* Ph·∫ßn kh√°m ph√° th√™m */}
      <View style={styles.exploreContainer}>
        <Text style={styles.hotDealTitle}>Kh√°m ph√° th√™m v·ªõi Grab</Text>
        <FlatList
          data={exploreItems}
          renderItem={renderExploreItem}
          keyExtractor={(item) => item.id}
          horizontal
          showsHorizontalScrollIndicator={false}
          style={styles.exploreList}
        />
      </View>
    </View>
  );

  return (
    <FlatList
      style={styles.container}
      data={suggestions}
      renderItem={renderSuggestionItem}
      keyExtractor={(item) => item.id}
      ListHeaderComponent={renderHeader}
      ListFooterComponent={renderFooter}
      stickyHeaderIndices={[2]} // Search bar ·ªü v·ªã tr√≠ index 2 trong ListHeaderComponent
    />
  );
};

export default RideBookingScreen;

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#F5F5F5',
  },
  header: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'space-between',
    padding: 16,
    backgroundColor: '#FFF',
    elevation: 2,
  },
  headerTitle: {
    fontSize: 18,
    fontWeight: 'bold',
  },
  illustrationContainer: {
    alignItems: 'center',
    paddingVertical: 16,
    backgroundColor: '#FFF',
  },
  subHeader: {
    fontSize: 16,
    color: '#333',
    marginBottom: 8,
  },
  illustration: {
    width: 200,
    height: 100,
    resizeMode: 'contain',
  },
  searchContainer: {
    flexDirection: 'row',
    alignItems: 'center',
    backgroundColor: '#FFF',
    marginHorizontal: 16,
    borderRadius: 8,
    padding: 8,
    elevation: 2,
  },
  searchInput: {
    flex: 1,
    marginLeft: 8,
    fontSize: 16,
  },
  bookButton: {
    backgroundColor: '#00C853',
    paddingVertical: 8,
    paddingHorizontal: 16,
    borderRadius: 20,
  },
  bookButtonText: {
    color: '#FFF',
    fontWeight: 'bold',
  },
  optionsSection: {
    marginTop: 16,
    paddingHorizontal: 16,
    backgroundColor: '#FFF',
  },
  sectionTitle: {
    fontSize: 18,
    fontWeight: 'bold',
    marginBottom: 8,
  },
  rideOptionsList: {
    marginTop: 8,
  },
  rideOptionItem: {
    flexDirection: 'row',
    alignItems: 'center',
    backgroundColor: '#F0F8FF',
    padding: 12,
    marginRight: 8,
    borderRadius: 8,
    elevation: 1,
  },
  rideOptionIcon: {
    width: 24,
    height: 24,
    marginRight: 8,
  },
  rideOptionText: {
    flex: 1,
  },
  rideOptionTitle: {
    fontSize: 16,
    fontWeight: 'bold',
  },
  rideOptionDescription: {
    fontSize: 14,
    color: '#666',
  },
  advanceBookingContainer: {
    padding: 16,
    backgroundColor: '#FFF',
    marginTop: 8,
  },
  advanceBookingImage: {
    width: '100%',
    height: 150,
    borderRadius: 8,
  },
  advanceBookingText: {
    marginTop: 8,
  },
  advanceBookingTitle: {
    fontSize: 18,
    fontWeight: 'bold',
  },
  advanceBookingDescription: {
    fontSize: 14,
    color: '#666',
    marginTop: 4,
  },
  advanceBookingSubText: {
    marginTop: 8,
  },
  subText: {
    fontSize: 14,
    color: '#666',
  },
  hotDealContainer: {
    marginTop: 16,
    paddingHorizontal: 16,
    backgroundColor: '#FFF',
    paddingBottom: 16,
  },
  hotDealTitle: {
    fontSize: 18,
    fontWeight: 'bold',
    marginBottom: 8,
  },
  offersList: {
    marginTop: 8,
  },
  offerItem: {
    marginRight: 16,
    alignItems: 'center',
  },
  offerImage: {
    width: 100,
    height: 100,
    borderRadius: 8,
  },
  offerTitle: {
    fontSize: 14,
    fontWeight: 'bold',
    marginTop: 4,
  },
  offerDiscount: {
    fontSize: 12,
    color: '#FF0000',
  },
  exploreContainer: {
    marginTop: 16,
    paddingHorizontal: 16,
    backgroundColor: '#FFF',
    paddingBottom: 16,
  },
  exploreList: {
    marginTop: 8,
  },
  exploreImage: {
    width: 150,
    height: 100,
    borderRadius: 8,
    marginRight: 8,
  },
  suggestionItem: {
    flexDirection: 'row',
    padding: 16,
    borderBottomWidth: 1,
    borderBottomColor: '#EEE',
    backgroundColor: '#FFF',
  },
  suggestionText: {
    marginLeft: 16,
  },
  suggestionName: {
    fontSize: 16,
    fontWeight: 'bold',
  },
  suggestionAddress: {
    fontSize: 14,
    color: '#666',
  },
});